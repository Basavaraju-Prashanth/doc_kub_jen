============== Replication Controller ==================

Replication Controller ensures that a specified number of pods  are running at any one time. It will keep the desired number of pods running and suppose if already pod exists with matching label and replicas mention value as 3 then only 2 pod will be created along with already created pod as both matches same label.

Suppose if the 1st pod gets deleted then automatically new pod will be created and matches desired state. IF another pod is created with same label it will create and terminate as desired state pods are available.

1. Create a nginx pod with below content,
$ cat nginx-pod.yaml
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    app: my-nginx  --- ReplicationController replicas will check for this label
spec:
  containers:
   - name: nginx
     image: nginx

2. Create a replication Controller file,
$ cat replica-controller-definition.yaml
apiVersion: v1
kind: ReplicationController
metadata:
  name: nginx
spec:
  replicas: 3
  selector:
    app: my-nginx
  template:
    metadata:
      name: nginx
      labels:
        app: my-nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80

3. Let's first create nginx pod and then run the replication controller file,
$ kubectl.exe apply -f nginx-pod.yaml
pod/nginx created

$ kubectl.exe get pods
NAME    READY   STATUS    RESTARTS   AGE
nginx   1/1     Running   0          13s


4. Let's run the replication controller,
$ kubectl.exe apply -f replica-controller-definition.yaml
replicationcontroller/nginx created

$ kubectl.exe get pods
NAME          READY   STATUS              RESTARTS   AGE
nginx         1/1     Running             0          27s -- already create pod
nginx-jqgxf   0/1     ContainerCreating   0          4s  -- pod created with replicas
nginx-wkv6k   0/1     ContainerCreating   0          4s


$ kubectl.exe get all
NAME              READY   STATUS    RESTARTS   AGE
pod/nginx         1/1     Running   0          53s
pod/nginx-jqgxf   1/1     Running   0          30s
pod/nginx-wkv6k   1/1     Running   0          30s

NAME                          DESIRED   CURRENT   READY   AGE
replicationcontroller/nginx   3         3         3       30s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.96.0.1    <none>        443/TCP   8h

$ kubectl.exe get replicationcontroller
NAME    DESIRED   CURRENT   READY   AGE
nginx   3         3         3       7m8s

$ kubectl.exe get pods
NAME          READY   STATUS    RESTARTS   AGE
nginx         1/1     Running   0          9m25s
nginx-jqgxf   1/1     Running   0          9m2s
nginx-wkv6k   1/1     Running   0          9m2s

$ kubectl.exe delete pod nginx
pod "nginx" deleted  - 1st pod is deleted

$ kubectl.exe get pods
NAME          READY   STATUS              RESTARTS   AGE
nginx-jqgxf   1/1     Running             0          9m26s
nginx-vx7pn   0/1     ContainerCreating   0          6s  -- as replicas defined is 3 , it is creating 3rd pod
nginx-wkv6k   1/1     Running             0          9m26s

$ kubectl.exe apply -f nginx-pod.yaml  -- It creates 4th pod with same label which created
pod/nginx created 

$ kubectl.exe get pods
NAME          READY   STATUS        RESTARTS   AGE
nginx         0/1     Terminating   0          3s  -- Even new pod is created but replicas is 3 , new pod be terminate
nginx-jqgxf   1/1     Running       0          13m
nginx-vx7pn   1/1     Running       0          4m13s
nginx-wkv6k   1/1     Running       0          13m


